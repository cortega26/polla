name: Ingest Alternative Sources

on:
  schedule:
    - cron: '0 13 * * *'
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Skip publishing to Google Sheets'
        required: false
        default: 'false'
  repository_dispatch:
    types: [refresh-alt-sources]
  push:
    branches: [main]
    paths:
      - 'polla_app/**'
      - 'tests/**'
      - 'requirements*.txt'
      - '.github/workflows/scrape.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run formatting & linting
        run: |
          black --check polla_app tests
          ruff check polla_app tests

      - name: Run type checking
        run: mypy polla_app

      - name: Run tests
        run: pytest tests -v --cov=polla_app --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  ingest:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ needs.test.result == 'success' && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch') }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Restore pipeline state
        id: restore-state
        uses: actions/cache/restore@v3
        with:
          path: pipeline_state
          key: pipeline-state-${{ github.ref_name }}-${{ github.run_number }}
          restore-keys: |
            pipeline-state-${{ github.ref_name }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run alternative-source pipeline (OpenLoto only)
        id: pipeline
        env:
          ALT_SOURCE_URLS: ${{ vars.ALT_SOURCE_URLS }}
          ALT_SOURCES_API_KEYS: ${{ secrets.ALT_SOURCES_API_KEYS }}
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
          GOOGLE_SPREADSHEET_ID: ${{ secrets.GOOGLE_SPREADSHEET_ID }}
        run: |
          mkdir -p artifacts raw pipeline_state logs
          python -m polla_app run \
            --sources openloto \
            --retries 3 \
            --timeout 30 \
            --no-fail-fast \
            --raw-dir artifacts/raw \
            --normalized artifacts/normalized.jsonl \
            --comparison-report artifacts/comparison_report.json \
            --summary artifacts/run_summary.json \
            --state-file pipeline_state/last_run.jsonl \
            --log-file logs/run.jsonl \
            --mismatch-threshold 0.2

      - name: Parse publish decision
        id: decision
        run: |
          python - <<'PY'
          import json, pathlib, os
          payload = json.loads(pathlib.Path('artifacts/run_summary.json').read_text())
          value = 'true' if payload.get('publish') else 'false'
          with open(os.environ['GITHUB_OUTPUT'], 'a', encoding='utf-8') as handle:
              handle.write(f"publish={value}\n")
          PY

      - name: Save pipeline state
        uses: actions/cache/save@v3
        if: always()
        with:
          path: pipeline_state
          key: pipeline-state-${{ github.ref_name }}-${{ github.run_number }}

      - name: Upload pipeline artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: alt-sources-artifacts
          path: |
            artifacts/
            logs/
          retention-days: 30

      - name: Notify Slack on failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          python - <<'PY'
          import json, os, urllib.request
          webhook = os.environ.get('SLACK_WEBHOOK_URL')
          if not webhook:
              raise SystemExit(0)
          payload = {
              "text": f"Alt-sources ingestion failed for run {os.environ.get('GITHUB_RUN_ID')}"
          }
          req = urllib.request.Request(
              webhook,
              data=json.dumps(payload).encode('utf-8'),
              headers={'Content-Type': 'application/json'},
          )
          urllib.request.urlopen(req)
          PY

    outputs:
      publish: ${{ steps.decision.outputs.publish }}

  publish:
    needs: ingest
    if: needs.ingest.outputs.publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: alt-sources-artifacts

      - name: Publish to Google Sheets
        env:
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          GOOGLE_SPREADSHEET_ID: ${{ secrets.GOOGLE_SPREADSHEET_ID }}
        run: |
          DRY_RUN="${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run || 'false' }}"
          # Fallbacks for legacy secret names and known spreadsheet ID
          if [ -z "${GOOGLE_SERVICE_ACCOUNT_JSON}" ] && [ -n "${GOOGLE_CREDENTIALS}" ]; then
            export GOOGLE_SERVICE_ACCOUNT_JSON="${GOOGLE_CREDENTIALS}";
          fi
          if [ -z "${GOOGLE_SPREADSHEET_ID}" ]; then
            export GOOGLE_SPREADSHEET_ID="16WK4Qg59G38mK1twGzN8tq2o3Y3DnYg11Lh2LyJ6tsc";
          fi
          if [ -z "${GOOGLE_SERVICE_ACCOUNT_JSON}" ] || [ -z "${GOOGLE_SPREADSHEET_ID}" ]; then
            echo "Missing Google secrets; skipping publish.";
            exit 0;
          fi
          if [ "${DRY_RUN}" = "true" ]; then DRY_FLAG="--dry-run"; else DRY_FLAG="--no-dry-run"; fi
          python -m polla_app publish \
            --normalized artifacts/normalized.jsonl \
            --comparison-report artifacts/comparison_report.json \
            --summary artifacts/run_summary.json \
            --worksheet "Proximo Pozo" \
            --discrepancy-tab "Discrepancies" \
            ${DRY_FLAG}
